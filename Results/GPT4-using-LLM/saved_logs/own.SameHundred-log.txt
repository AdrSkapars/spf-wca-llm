
############################################################
                    GET INITIAL GENERALISATION
############################################################
I'm experimenting with a program and trying to find what makes an increasingly large set of inputs valid. So far I have found one possible set of correct constraints/ conditions (not the only one) which define a valid input. Here they are.

Valid constraints for 1 inputs (N=1):
None

Valid constraints for 2 inputs (N=2):
in1 >= 100

Valid constraints for 3 inputs (N=3):
in2 >= 100, in1 >= 100

Valid constraints for 4 inputs (N=4):
in3 >= 100, in2 >= 100, in1 >= 100

Valid constraints for 5 inputs (N=5):
in4 >= 100, in3 >= 100, in2 >= 100, in1 >= 100

Valid constraints for 6 inputs (N=6):
in5 >= 100, in4 >= 100, in3 >= 100, in2 >= 100, in1 >= 100

Valid constraints for 7 inputs (N=7):
in6 >= 100, in5 >= 100, in4 >= 100, in3 >= 100, in2 >= 100, in1 >= 100

Valid constraints for 8 inputs (N=8):
in7 >= 100, in6 >= 100, in5 >= 100, in4 >= 100, in3 >= 100, in2 >= 100, in1 >= 100

Valid constraints for 9 inputs (N=9):
in8 >= 100, in7 >= 100, in6 >= 100, in5 >= 100, in4 >= 100, in3 >= 100, in2 >= 100, in1 >= 100

Valid constraints for 10 inputs (N=10):
in9 >= 100, in8 >= 100, in7 >= 100, in6 >= 100, in5 >= 100, in4 >= 100, in3 >= 100, in2 >= 100, in1 >= 100

Generalise what makes the set of constraints valid such that we can recover a valid set for N inputs. Don't overfit the data here but also dont oversimplify to the point of trivialness. Make sure none of the given examples contradict your generalisation.
############################################################
CASUAL

From the provided input constraints, we can clearly observe a pattern: For any number of inputs N, the valid constraints are that every input from in1 to inN-1 should be greater than or equal to 100. This pattern starts from N=2 and holds for all the given examples.

FORMAL

A valid set of constraints for an input size N (N > 1) can be defined as:

For each i in the set {1, 2, ..., N-1}, the ith input, denoted in(i), should fulfill the condition in(i) ≥ 100.
############################################################
                    ATTEMPT NUMBER 1
############################################################
Here is the correct set:
```
in1 >= 100
```

Here is the predicted set:
```
in(1) ≥ 100
```
############################################################
Here is the correct set:
```
in2 >= 100, in1 >= 100
```

Here is the predicted set:
```
in(1) ≥ 100, in(2) ≥ 100
```
############################################################
Here is the correct set:
```
in3 >= 100, in2 >= 100, in1 >= 100
```

Here is the predicted set:
```
in(1) ≥ 100, in(2) ≥ 100, in(3) ≥ 100
```
############################################################
Here is the correct set:
```
in4 >= 100, in3 >= 100, in2 >= 100, in1 >= 100
```

Here is the predicted set:
```
in(1) ≥ 100, in(2) ≥ 100, in(3) ≥ 100, in(4) ≥ 100.
```
############################################################
Here is the correct set:
```
in5 >= 100, in4 >= 100, in3 >= 100, in2 >= 100, in1 >= 100
```

Here is the predicted set:
```
in(1) ≥ 100, in(2) ≥ 100, in(3) ≥ 100, in(4) ≥ 100, in(5) ≥ 100
```
############################################################
Here is the correct set:
```
in6 >= 100, in5 >= 100, in4 >= 100, in3 >= 100, in2 >= 100, in1 >= 100
```

Here is the predicted set:
```
in(1) ≥ 100, in(2) ≥ 100, in(3) ≥ 100, in(4) ≥ 100, in(5) ≥ 100, in(6) ≥ 100
```
############################################################
Here is the correct set:
```
in7 >= 100, in6 >= 100, in5 >= 100, in4 >= 100, in3 >= 100, in2 >= 100, in1 >= 100
```

Here is the predicted set:
```
in(1) ≥ 100, in(2) ≥ 100, in(3) ≥ 100, in(4) ≥ 100, in(5) ≥ 100, in(6) ≥ 100, in(7) ≥ 100

```
############################################################
Here is the correct set:
```
in8 >= 100, in7 >= 100, in6 >= 100, in5 >= 100, in4 >= 100, in3 >= 100, in2 >= 100, in1 >= 100
```

Here is the predicted set:
```
in(1) ≥ 100, in(2) ≥ 100, in(3) ≥ 100, in(4) ≥ 100, in(5) ≥ 100, in(6) ≥ 100, in(7) ≥ 100, in(8) ≥ 100
```
############################################################
Here is the correct set:
```
in9 >= 100, in8 >= 100, in7 >= 100, in6 >= 100, in5 >= 100, in4 >= 100, in3 >= 100, in2 >= 100, in1 >= 100
```

Here is the predicted set:
```
in(1) ≥ 100, in(2) ≥ 100, in(3) ≥ 100, in(4) ≥ 100, in(5) ≥ 100, in(6) ≥ 100, in(7) ≥ 100, in(8) ≥ 100, in(9) ≥ 100

```
############################################################
DONE WITH THAT EXAMPLE