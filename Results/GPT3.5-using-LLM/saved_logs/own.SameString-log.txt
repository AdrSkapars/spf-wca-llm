
############################################################
                    GET INITIAL GENERALISATION
############################################################
I'm experimenting with a program and trying to find what makes an increasingly large set of inputs valid. So far I have found one possible set of correct constraints/ conditions (not the only one) which define a valid input. Here they are.

Valid constraints for 1 inputs (N=1):
in0 == 120

Valid constraints for 2 inputs (N=2):
in1 == 120, in0 == 120

Valid constraints for 3 inputs (N=3):
in2 == 120, in1 == 120, in0 == 120

Valid constraints for 4 inputs (N=4):
in3 == 120, in2 == 120, in1 == 120, in0 == 120

Valid constraints for 5 inputs (N=5):
in4 == 120, in3 == 120, in2 == 120, in1 == 120, in0 == 120

Valid constraints for 6 inputs (N=6):
in5 == 120, in4 == 120, in3 == 120, in2 == 120, in1 == 120, in0 == 120

Valid constraints for 7 inputs (N=7):
in6 == 120, in5 == 120, in4 == 120, in3 == 120, in2 == 120, in1 == 120, in0 == 120

Valid constraints for 8 inputs (N=8):
in7 == 120, in6 == 120, in5 == 120, in4 == 120, in3 == 120, in2 == 120, in1 == 120, in0 == 120

Valid constraints for 9 inputs (N=9):
in8 == 120, in7 == 120, in6 == 120, in5 == 120, in4 == 120, in3 == 120, in2 == 120, in1 == 120, in0 == 120

Valid constraints for 10 inputs (N=10):
in9 == 120, in8 == 120, in7 == 120, in6 == 120, in5 == 120, in4 == 120, in3 == 120, in2 == 120, in1 == 120, in0 == 120

Generalise what makes the set of constraints valid such that we can recover a valid set for N inputs. Don't overfit the data here but also dont oversimplify to the point of trivialness. Make sure none of the given examples contradict your generalisation.
############################################################
CASUAL
It appears that for each valid input, the value must be 120, and each new input must be equal to 120 as well as the previous inputs. For instance, for 2 inputs, in1 must be equal to 120 and in0 must be equal to 120; for 3 inputs, in2 must be equal to 120, in1 must be equal to 120, and in0 must be equal to 120; and so on for additional inputs.

FORMAL
The valid constraint for N inputs is:
in(N-1) == 120, in(N-2) == 120, ..., in1 == 120, in0 == 120
############################################################
                    ATTEMPT NUMBER 1
############################################################
(done with that example)